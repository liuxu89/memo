# name: CI
# on:
#   push:
#     branches:
#       - main
#     tags: '*'
# #  pull_request:
# #concurrency:
# #  # Skip intermediate builds: always.
# #  # Cancel intermediate builds: only if it is a pull request build.
# #  group: ${{ github.workflow }}-${{ github.ref }}
# #  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
# jobs:
#   #test:
#   #  name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
#   #  runs-on: ${{ matrix.os }}
#   #  strategy:
#   #    fail-fast: false
#   #    matrix:
#   #      version:
#   #        - '1.7'
#   #      os:
#   #        - ubuntu-latest
#   #      arch:
#   #        - x64
#   #  steps:
#   #    - uses: actions/checkout@v2
#   #    - uses: julia-actions/setup-julia@v1
#   #      with:
#   #        version: ${{ matrix.version }}
#   #        arch: ${{ matrix.arch }}
#   #    - uses: julia-actions/cache@v1
#   #    - uses: julia-actions/julia-buildpkg@v1
#   #    - uses: julia-actions/julia-runtest@v1
#   docs:
#     name: Documentation
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: julia-actions/setup-julia@v1
#         with:
#           version: '1.10'
#       - uses: julia-actions/julia-buildpkg@v1
#       - uses: julia-actions/julia-docdeploy@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
# #     - run: |
# #         julia --project=docs -e '
# #           using Documenter: DocMeta, doctest
# #           using memo
# #           DocMeta.setdocmeta!(memo, :DocTestSetup, :(using memo); recursive=true)
# #           doctest(memo)'

name: Deploy
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write  # To push a branch
      pages: write  # To push to a GitHub Pages site
      id-token: write # To update the deployment status
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
      - name: build doc
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()
            include("docs/make.jl")
          '
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'docs/build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
